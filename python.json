{
    "List Input": {
        "prefix": "inp",
        "body": [
            "list(map(int, input().split()))"
        ],
        "description": "List Input for AtCoder"
    },
    "Map Input": {
        "prefix": "inp",
        "body": [
            "map(int, input().split())"
        ],
        "description": "Map Input for AtCoder"
    },
    "Int Input": {
        "prefix": "inp",
        "body": [
            "int(input())"
        ],
        "description": "Int Input for AtCoder"
    },
    "Prime Factoring": {
        "prefix": "prime",
        "body": [
            "# nの[素因数, その数]のリストを返す",
            "def prime_factoring(n):",
            "    from math import sqrt",
            "    factors = []",
            "    for num in range(2, int(sqrt(n))+1):",
            "        print(num)",
            "        if n % num == 0:",
            "            count = 0",
            "            while(n % num == 0):",
            "                n //= num",
            "                count += 1",
            "            factors.append([num, count])",
            "    else:",
            "        factors.append([n, 1])",
            "    return factors"
        ]
    },
    "Divisor": {
        "prefix": "divisor",
        "body": [
            "# nの約数を求める。計算量O(N)",
            "def divisor(n):",
            "    from math import sqrt",
            "    from collections import deque",
            "    divisors = deque([])",
            "    for num in range(int(sqrt(n)), n+1):",
            "        if n % num == 0:",
            "            divisors.append(n//num)",
            "            divisors.appendleft(num)",
            "    return divisors"
        ]
    }
}